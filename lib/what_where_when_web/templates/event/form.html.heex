<%= form_for @changeset, @action, fn f -> %>
  <%= if @changeset.action do %>
    <div class="alert alert-danger">
      <p>Oops, something went wrong! Please check the errors below.</p>
    </div>
  <% end %>

  <% whose = if @current_person.camp, do: "My/our", else: "My" %>


  <fieldset>
  <%= label f, :name, "#{whose} event is named" %> <br/>
  <%= text_input f, :name %>
  <%= error_tag f, :name %>
  </fieldset>


  <%= if @current_person.camp do %>
  <fieldset>
  <%= label f, :owner_type, "It's hosted by" %>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :owner_type, "person", class: "mr-2" %>
  <%= label f, :owner_type_person, "Me, #{WhatWhereWhen.People.Person.name(@current_person)}" %>
  </div>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :owner_type, "camp", class: "mr-2" %>
  <%= label f, :owner_type_camp, "My camp, #{@current_person.camp.name}" %>
  </div>
  <%= error_tag f, :owner_type %>
  </fieldset>
  <% else %>
  <%= hidden_input f, :owner_type, value: "person" %>
  <%  end  %>


  <fieldset>
  <%= label f, :start_date, "It'll be on..." %><br />
  <% day_options = Firefly.date_range
  |> Enum.map(fn (%Date{} = d) ->  [key: Calendar.strftime(d, "%A (%m/%d)"), value: Date.to_iso8601(d)]
  end) %>
  <div class="flex flex-row items-center mb-1 justify-around">

  <%= select f, :start_date, options: day_options %>
  <div class="flex flex-col items-center mb-1">
  <%= label :event, :all_day, "All day?" %> <%= checkbox :event, :all_day, value: (get_in(@conn.body_params, ["event", "all_day"]) == "true" || (List.last(@conn.path_info) == "show" && is_nil(@changeset.data.start_time))) %>
  </div>
  </div>

  <div id="start_time_container" class="flex flex-row justify-evenly">
  <%= label :event, :start_time, "at", class: "flex mr-3" %> <%= time_input f, :start_time, value: ( get_in(@conn.body_params, ["event", "start_time"]) || (@changeset.data.start_time && NaiveDateTime.to_time(@changeset.data.start_time)))  %>
  <br/> <%= error_tag f, :start_time %>

  </div>

  </fieldset>


  <hr class="my-3"/>



  <fieldset>
  <%= label f, :description, "Neat. What is it?" %><br/>
  <%= textarea f, :description %>
  <%= error_tag f, :description %>
  </fieldset>


  <fieldset>
  <%= label f, :category_id, "So like, if you had to categorize it, it's uhhh...?" %><br/>
  <%# <% c = if is_struct(@changeset.data.category, Ecto.Association.NotLoaded), do: :event, else: f %>
  <%= select f, :category_id,
    Enum.map(@categories, fn (%WhatWhereWhen.Events.Category{} = c) ->
      [key: to_string(c), value: c.id]
    end)
  %>
  </fieldset>

  <fieldset>
  <%= label f, :minimum_age_bool, "Is there a minimum age for it?" %>
  <%= error_tag f, :minimum_age %>

  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :minimum_age_bool, "unrestricted", class: "mr-2" %>
  <%= label f, :minimum_age_bool_unrestricted, "No. It is fine for young children" %>
  </div>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :minimum_age_bool, "restricted", class: "mr-2" %>
  <%= label f, :minimum_age_bool_restricted, "Yes, at least ", class: "mr-2"%>
  <%= number_input f, :minimum_age,  class: "w-20" %>   <%= label f, :minimum_age_bool_restricted, "years old, please", class: "ml-2"%>

  </div>
  </fieldset>

  <fieldset>
  <%= label f, :sober_friendly, "Is it Sobriety/Recovery friendly?" %>
  <%= error_tag f, :sober_friendly %>

  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :sober_friendly, "yes", class: "mr-2" %>
  <%= label f, :sober_friendly_yes, "Yes, it will be intoxicant free" %>
  </div>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :sober_friendly, "options", class: "mr-2" %>
  <%= label f, :sober_friendly_options, "Yes, there will be sober options offered" %>
  </div>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :sober_friendly, "no", class: "mr-2" %>
  <%= label f, :sober_friendly_no, "Nope, sorry" %>
  </div>
  </fieldset>


  <hr class="my-3"/>

  <%= inputs_for f, :location, fn l -> %>

  <fieldset>
  <%= error_tag f, :location %>
  <%= label f, :location, "Alright sounds good. One last thing: Where is it gonna be?" %>
  <%= if @current_person.camp do %>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :location_is_camp, "true", class: "mr-2" %>
  <%= label f, :location_is_camp_true, @current_person.camp.name %>
  </div>
  <div class="flex flex-row items-center mb-1">
  <%= radio_button f, :location_is_camp, "false", class: "mr-2" %>
  <%= label f, :location_is_camp_false, "Somewhere else"  %>
  </div>
  <% end %>
  <%= hidden_input l, :lat %>
  <%= hidden_input l, :lng %>

  <div id="location_form" class="flex flex-col hidden">
    <%= text_input l, :description, class: "flex-grow-0 mb-2", placeholder: "Type a description here and/or click a point below"  %>
    <div id="map" class={"min-h-[40vh] flex flex-shrink-0"}></div>
  </div>
  <script phx-track-static type="text/javascript" src={Routes.static_path(@conn, "/assets/map.js")}></script>
  </fieldset>
  <% end %>


  <%= if @changeset.errors[:location] && @changeset.errors[:location] |> elem(1) |> Keyword.has_key?(:camp_location_not_set) do %>
  <%= hidden_input :location, "is_for_camp", value: @current_person.camp.id %>

  <% end %>

  <div>
    <%= submit "Manifest Activity!" %>
  </div>
<% end %>

<script type="text/javascript">
(function () {
  var byId = document.getElementById.bind(document);

  var lat = byId("event_location_lat");
  var lng = byId("event_location_lng");
  var eventLocationMarker;

  var checkbox_all_day = byId("event_all_day");
  var div_start_time = byId("start_time_container");

  var hide_time_if_all_day = function () {
    div_start_time.style.display = checkbox_all_day.checked ? "none" : "flex";
  };

  checkbox_all_day.addEventListener("change", hide_time_if_all_day);
  hide_time_if_all_day();

  var radio_age_unrestricted = byId("event_minimum_age_bool_unrestricted");
  var radio_age_restricted = byId("event_minimum_age_bool_restricted");
  var age_control = byId("event_minimum_age");

  if (age_control.value != 0) {
    radio_age_restricted.checked = true;
  } else {
    radio_age_unrestricted.checked = true;
  }

  age_control.addEventListener("input", function (event) {
    radio_age_restricted.checked = true;
  });
  radio_age_unrestricted.addEventListener("change", function (event) {
    age_control.value = 0;
  });
  radio_age_restricted.addEventListener("change", function (event) {
    if (age_control.value == 0) {
      age_control.value = 18;
    }
  });

  var otherLocationContainer = byId("location_form")
  var mapContainer = byId("map");
  var rigMap = function () {
    mountMap(mapContainer);

    var waitingForMap = setInterval(function () {
      if (window.map === undefined) {
        return;
      }

      clearInterval(waitingForMap);

      afterMapMounted();
    });
  };


  var location_is_camp = byId("event_location_is_camp_true");
  var prompting_for_camp_location = byId("location_is_for_camp");

  var afterMapMounted = function () {
    var emoji = "ðŸ˜…";

    var newMarker = function(latLong) {
      eventLocationMarker = L.marker(latLong, {
        icon: L.divIcon({
          html: '<span class="emoji-map-marker">' + emoji + "</span>",
        }),
      }).on("click", function (e) {
        e.target.remove();
      });

      return eventLocationMarker;
    }

    if (lat.value && lng.value) {
      newMarker({
        lat: lat.value, lng: lng.value
      }).addTo(window.map);
      map.flyTo({
        lat: lat.value, lng: lng.value
      });
    }

    window.map.on("click", function (e) {
      if (eventLocationMarker) {
        eventLocationMarker.remove();
      }

      lat.value = e.latlng.lat;
      lng.value = e.latlng.lng;

      newMarker(e.latlng).addTo(window.map);
    });

    if (prompting_for_camp_location) {
      var desc = byId("event_location_description");
      desc.value = "<%= @current_person.camp && @current_person.camp.name %>";
      desc.readOnly = true;
      desc.style.color = "#888";
      map.setZoom(-1.5);
      <%# zoom in more to start - so we are (slightly) likelier to get a more accurate location if we are gonna reuse it %>
    }
  };
  if (location_is_camp && !prompting_for_camp_location) {
    var location_is_else = byId("event_location_is_camp_false");

    location_is_else.addEventListener("change", function (event) {
      otherLocationContainer.style.display = "flex";
      rigMap();
      mapContainer.scrollIntoView({ behavior: "smooth", block: "center" });
    });

    location_is_camp.addEventListener("change", function (event) {
      otherLocationContainer.style.display = "none";
    });
  } else {
    otherLocationContainer.style.display = "flex";
    rigMap();
  }
})();
</script>

<%# <%= if @weird_flags[:camp_place] do
  rigMap();
  <% end %>
